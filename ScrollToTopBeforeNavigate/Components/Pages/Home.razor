@page "/"
@implements IDisposable
@inject NavigationManager NavigationManager

<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>
<h1>Hello, world!</h1>

Welcome to your new app.

<button onclick="@Navigate">navigate</button>

@code {
	IDisposable locationChangingRegistration;

	bool suppressRender;

	protected override bool ShouldRender() => false;

	protected void Navigate(MouseEventArgs mouseEventArgs)
	{
		suppressRender = true;
		NavigationManager.NavigateTo("/counter", false , true);
	}

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		locationChangingRegistration = NavigationManager.RegisterLocationChangingHandler(OnLocationChanging);
	}

	ValueTask OnLocationChanging(LocationChangingContext e)
	{
		//Thread.Sleep(200);
		return ValueTask.CompletedTask;
	}

	public void Dispose()
	{
		locationChangingRegistration.Dispose();
	}
}